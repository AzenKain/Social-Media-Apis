# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type NotificationType {
  id: String!
  type: String!
  content: String
  fileUrl: [String!]!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProfileType {
  name: String!
  nickName: String
  birthday: String
  age: Float
  description: String
  phoneNumber: Float
  avatarUrl: String
}

type User {
  id: String!
  email: String!
  hash: String!
  refreshToken: String!
  detail: ProfileType!
  notification: NotificationType!
  created_at: DateTime!
  updated_at: DateTime!
}

type Interaction {
  id: String!
  content: String!
  userId: String!
  isDisplay: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

type Message {
  id: String!
  userId: String!
  isDisplay: Boolean!
  content: String!
  fileUrl: [String!]!
  interaction: [Interaction!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type Roomchat {
  id: String!
  isSingle: Boolean!
  ownerUserId: String!
  description: String
  imgDisplay: String
  member: [String!]!
  memberOut: [MemberOut!]!
  data: [Message!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type MemberOut {
  memberId: String!
  messageCount: Float!
  created_at: DateTime!
  updated_at: DateTime!
}

type AuthResponse {
  access_token: String!
  refresh_token: String!
}

type LogoutResponse {
  response: String
}

type Post {
  id: String!
  ownerUserId: String!
  linkedShare: String
  content: String!
  fileUrl: [String!]!
  isDisplay: Boolean!
  interaction: [Interaction!]!
  comment: [Message!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type Query {
  getUser(id: String!): User!
  acceptFriendUser(acceptFriend: FriendDto!): User!
  getAllRomchatByUserId(id: String!): [Roomchat!]!
  getRomchatById(id: String!): Roomchat!
  addMemberRomchatById(addMemberRoom: MemberRoomDto!): Roomchat!
  removeMemberRomchatById(removeMemberRoom: MemberRoomDto!): Roomchat!
  Login(userDto: AuthDto!): AuthResponse!
  logout(id: String!): LogoutResponse!
  Refresh(id: String!): AuthResponse!
  getAllPostByUserId(id: String!): [Post!]!
  getPostById(id: String!): Post!
  commentPost(commentPost: CommentPostDto!): Post!
  sharePost(sharePost: SharePostDto!): Post!
  interactPost(interactPost: InteractPostDto!): Post!
}

input FriendDto {
  userId: String!
  friendId: String!
}

input MemberRoomDto {
  userId: String!
  roomchatId: String!
  member: [String!]!
}

input AuthDto {
  email: String!
  password: String!
}

input CommentPostDto {
  userId: String!
  postId: String!
  content: String!
  fileUrl: [String!]!
}

input SharePostDto {
  userId: String!
  postId: String!
  content: String
  fileUrl: [String!]!
}

input InteractPostDto {
  userId: String!
  postId: String!
  content: String
}

type Mutation {
  addFriendUser(addFriend: FriendDto!): User!
  removeFriendUser(addFriend: FriendDto!): User!
  addNotificationUser(addNotification: NotificationDto!): User!
  createRoomChat(createRoom: CreateRoomDto!): Roomchat!
  SignUp(userDto: SignUpDto!): AuthResponse!
  createPost(createPost: CreatePostDto!): Post!
  RemovePost(RemovePost: ValidatePostDto!): Post!
  RemoveComment(RemoveComment: ValidatePostDto!): Post!
  RemoveInteraction(RemoveInteraction: ValidatePostDto!): Post!
}

input NotificationDto {
  userId: String!
  type: String!
  content: String!
  fileUrl: [String!]!
}

input CreateRoomDto {
  userId: String!
  isSingle: Boolean!
  member: [String!]!
}

input SignUpDto {
  email: String!
  password: String!
  name: String!
  birthday: String
  age: Int
  phoneNumber: Int
}

input CreatePostDto {
  userId: String!
  content: String
  fileUrl: [String!]!
}

input ValidatePostDto {
  userId: String!
  postId: String!
  Id: String!
}